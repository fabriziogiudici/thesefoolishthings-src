<?xml version="1.0" encoding="UTF-8"?>
<!--

    *********************************************************************************************************************

    TheseFoolishThings: Miscellaneous utilities
    http://tidalwave.it/projects/thesefoolishthings

    Copyright (C) 2009 - 2023 by Tidalwave s.a.s. (http://tidalwave.it)

    *********************************************************************************************************************

    Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
    the License. You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations under the License.

    *********************************************************************************************************************

    git clone https://bitbucket.org/tidalwave/thesefoolishthings-src
    git clone https://github.com/tidalwave-it/thesefoolishthings-src

    *********************************************************************************************************************

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>it.tidalwave.thesefoolishthings</groupId>
        <artifactId>thesefoolishthings</artifactId>
        <version>3.2-ALPHA-16-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <groupId>it.tidalwave.thesefoolishthings</groupId>
    <artifactId>modules</artifactId>
    <packaging>pom</packaging>
    <version>3.2-ALPHA-16-SNAPSHOT</version>
    <name>TheseFoolishThings (modules)</name>
    <description>
        This module is an umbrella for all the components. It contains the global configuration for the build as well as the declaration of dependencies.
    </description>

    <properties>
        <java-diff-utils.version>4.9</java-diff-utils.version>
        <joda-time.version>1.6.2</joda-time.version>
        <tft.spring.version>4.3.30.RELEASE</tft.spring.version>
        <uuid.version>2.1.5</uuid.version>

        <api.check.version>3.2-ALPHA-14</api.check.version>
        <tft.animal-sniffer-maven-plugin.skip>false</tft.animal-sniffer-maven-plugin.skip>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${tft.spring.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <dependency>
                <groupId>com.eaio</groupId>
                <artifactId>uuid</artifactId>
                <version>${uuid.version}</version>
            </dependency>
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda-time.version}</version>
            </dependency>

            <dependency>
                <groupId>io.github.java-diff-utils</groupId>
                <artifactId>java-diff-utils</artifactId>
                <version>${java-diff-utils.version}</version>
            </dependency>

            <!--
            FIXME: used as provided dependency in some modules to work around a javadoc crash.
            2021-03-16: doesn't crash, but javadoc runs much longer (10 mins vs 20 mins).
            -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.2</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>javax.annotation</groupId>
            <artifactId>javax.annotation-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>

        <!-- TEST DEPENDENCIES -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>1.22</version>
                <configuration>
                    <skip>${tft.animal-sniffer-maven-plugin.skip}</skip>
                    <failOnError>false</failOnError>
                    <includeJavaHome>false</includeJavaHome>
                    <signature>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>${project.artifactId}</artifactId>
                        <version>${api.check.version}</version>
                    </signature>
                    <includeClasses>
                        <includeClass>it.tidalwave.actor.annotation.*</includeClass>
                        <includeClass>it.tidalwave.actor.spi.*</includeClass>
                        <includeClass>it.tidalwave.actor.*</includeClass>
                        <includeClass>it.tidalwave.dci.annotation.*</includeClass>
                        <includeClass>it.tidalwave.messagebus.annotation.*</includeClass>
                        <includeClass>it.tidalwave.messagebus.spi.*</includeClass>
                        <includeClass>it.tidalwave.messagebus.*</includeClass>
                        <includeClass>it.tidalwave.role.annotation.*</includeClass>
                        <includeClass>it.tidalwave.role.io.spi.*</includeClass>
                        <includeClass>it.tidalwave.role.io.*</includeClass>
                        <includeClass>it.tidalwave.role.spi.*</includeClass>
                        <includeClass>it.tidalwave.role.ui.function.*</includeClass>
                        <includeClass>it.tidalwave.role.ui.spi.*</includeClass>
                        <includeClass>it.tidalwave.role.ui.*</includeClass>
                        <includeClass>it.tidalwave.role.*</includeClass>
                        <includeClass>it.tidalwave.util.annotation.*</includeClass>
                        <includeClass>it.tidalwave.util.spi.*</includeClass>
                        <includeClass>it.tidalwave.util.spring.*</includeClass>
                        <includeClass>it.tidalwave.util.test.*</includeClass>
                        <includeClass>it.tidalwave.util.thread.annotation.*</includeClass>
                        <includeClass>it.tidalwave.util.thread.*</includeClass>
                        <includeClass>it.tidalwave.util.ui.*</includeClass>
                        <includeClass>it.tidalwave.util.*</includeClass>
                    </includeClasses>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <modules>
        <module>Actors</module>
        <module>MessageBus</module>
        <module>Roles</module>
        <module>SpringMessageBus</module>
        <module>SpringRoles</module>
        <module>Utilities</module>
        <module>TestUtilities</module>
        <module>examples</module>
    </modules>

</project>
